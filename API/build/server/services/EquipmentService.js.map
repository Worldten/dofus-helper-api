{"version":3,"sources":["../../../api/server/services/EquipmentService.js"],"names":["EquipmentService","database","equipments","findAll","console","log","newEquipment","create","id","updateEquipment","findOne","where","Number","EquipmentToUpdate","update","theEquipment","EquipmentToDelete","destroy","deletedEquipment"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;IAEMA,gB;;;;;;;;;;;;;;;uBAGaC,mBAASC,UAAT,CAAoBC,OAApB,E;;;;;;;;AAEbC,gBAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;;;;;;;;;;;;;;;;;;;;0HAKsBC,Y;;;;;;;uBAETL,mBAASC,UAAT,CAAoBK,MAApB,CAA2BD,YAA3B,C;;;;;;;;;;;;;;;;;;;;;;;;;;;8HAMYE,E,EAAIC,gB;;;;;;;;uBAEGR,mBAASC,UAAT,CAAoBQ,OAApB,CAA4B;AAC1DC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AADmD,iBAA5B,C;;;AAA1BK,gBAAAA,iB;;qBAIFA,iB;;;;;;uBACIZ,mBAASC,UAAT,CAAoBY,MAApB,CAA2BL,gBAA3B,EAA4C;AAAEE,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAAT,iBAA5C,C;;;kDAECC,gB;;;kDAEF,I;;;;;;;;;;;;;;;;;;;;;;;;2HAMgBD,E;;;;;;;;uBAEIP,mBAASC,UAAT,CAAoBQ,OAApB,CAA4B;AACrDC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAD8C,iBAA5B,C;;;AAArBO,gBAAAA,Y;kDAICA,Y;;;;;;;;;;;;;;;;;;;;;;;;6HAMkBP,E;;;;;;;;uBAEOP,mBAASC,UAAT,CAAoBQ,OAApB,CAA4B;AAAEC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAAT,iBAA5B,C;;;AAA1BQ,gBAAAA,iB;;qBAEFA,iB;;;;;;uBAC6Bf,mBAASC,UAAT,CAAoBe,OAApB,CAA4B;AACzDN,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AADkD,iBAA5B,C;;;AAAzBU,gBAAAA,gB;kDAGCA,gB;;;kDAEF,I;;;;;;;;;;;;;;;;;;;;;;;;;eAOElB,gB","sourcesContent":["import database from '../src/models';\n\nclass EquipmentService {\n  static async getAllEquipments() {\n    try {\n      return await database.equipments.findAll();\n    } catch (error) {\n      console.log(\"Erreur dans le service\" + error);\n      throw error;\n    }\n  }\n\n  static async addEquipment(newEquipment) {\n    try {\n      return await database.equipments.create(newEquipment);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async updateEquipment(id, updateEquipment) {\n    try {\n      const EquipmentToUpdate = await database.equipments.findOne({\n        where: { id: Number(id) }\n      });\n\n      if (EquipmentToUpdate) {\n        await database.equipments.update(updateEquipment, { where: { id: Number(id) } });\n\n        return updateEquipment;\n      }\n      return null;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async getAEquipment(id) {\n    try {\n      const theEquipment = await database.equipments.findOne({\n        where: { id: Number(id) }\n      });\n\n      return theEquipment;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async deleteEquipment(id) {\n    try {\n      const EquipmentToDelete = await database.equipments.findOne({ where: { id: Number(id) } });\n\n      if (EquipmentToDelete) {\n        const deletedEquipment = await database.equipments.destroy({\n          where: { id: Number(id) }\n        });\n        return deletedEquipment;\n      }\n      return null;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\nexport default EquipmentService;"],"file":"EquipmentService.js"}
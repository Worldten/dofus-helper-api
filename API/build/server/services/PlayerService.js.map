{"version":3,"sources":["../../../api/server/services/PlayerService.js"],"names":["PlayerService","database","player","findAll","console","log","newPlayer","create","id","updatePlayer","findOne","where","Number","PlayerToUpdate","update","thePlayer","PlayerToDelete","destroy","deletedPlayer"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;IAEMA,a;;;;;;;;;;;;;;;uBAGaC,mBAASC,MAAT,CAAgBC,OAAhB,E;;;;;;;;AAEbC,gBAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;;;;;;;;;;;;;;;;;;;;uHAKmBC,S;;;;;;;uBAENL,mBAASC,MAAT,CAAgBK,MAAhB,CAAuBD,SAAvB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;2HAMSE,E,EAAIC,a;;;;;;;;uBAEGR,mBAASC,MAAT,CAAgBQ,OAAhB,CAAwB;AACnDC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAD4C,iBAAxB,C;;;AAAvBK,gBAAAA,c;;qBAIFA,c;;;;;;uBACIZ,mBAASC,MAAT,CAAgBY,MAAhB,CAAuBL,aAAvB,EAAqC;AAAEE,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAAT,iBAArC,C;;;kDAECC,a;;;kDAEF,I;;;;;;;;;;;;;;;;;;;;;;;;wHAMaD,E;;;;;;;;uBAEIP,mBAASC,MAAT,CAAgBQ,OAAhB,CAAwB;AAC9CC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AADuC,iBAAxB,C;;;AAAlBO,gBAAAA,S;kDAICA,S;;;;;;;;;;;;;;;;;;;;;;;;0HAMeP,E;;;;;;;;uBAEOP,mBAASC,MAAT,CAAgBQ,OAAhB,CAAwB;AAAEC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAAT,iBAAxB,C;;;AAAvBQ,gBAAAA,c;;qBAEFA,c;;;;;;uBAC0Bf,mBAASC,MAAT,CAAgBe,OAAhB,CAAwB;AAClDN,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAD2C,iBAAxB,C;;;AAAtBU,gBAAAA,a;kDAGCA,a;;;kDAEF,I;;;;;;;;;;;;;;;;;;;;;;;;;eAOElB,a","sourcesContent":["import database from '../src/models';\n\nclass PlayerService {\n  static async getAllPlayers() {\n    try {\n      return await database.player.findAll();\n    } catch (error) {\n      console.log(\"Erreur dans le service\" + error);\n      throw error;\n    }\n  }\n\n  static async addPlayer(newPlayer) {\n    try {\n      return await database.player.create(newPlayer);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async updatePlayer(id, updatePlayer) {\n    try {\n      const PlayerToUpdate = await database.player.findOne({\n        where: { id: Number(id) }\n      });\n\n      if (PlayerToUpdate) {\n        await database.player.update(updatePlayer, { where: { id: Number(id) } });\n\n        return updatePlayer;\n      }\n      return null;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async getAPlayer(id) {\n    try {\n      const thePlayer = await database.player.findOne({\n        where: { id: Number(id) }\n      });\n\n      return thePlayer;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async deletePlayer(id) {\n    try {\n      const PlayerToDelete = await database.player.findOne({ where: { id: Number(id) } });\n\n      if (PlayerToDelete) {\n        const deletedPlayer = await database.player.destroy({\n          where: { id: Number(id) }\n        });\n        return deletedPlayer;\n      }\n      return null;\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\nexport default PlayerService;"],"file":"PlayerService.js"}
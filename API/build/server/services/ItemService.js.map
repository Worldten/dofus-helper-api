{"version":3,"sources":["../../../api/server/services/ItemService.js"],"names":["Op","Sequelize","ItemService","database","item","findAll","console","log","newItem","create","id","updateItem","findOne","where","Number","ItemToUpdate","update","theItem","ItemToDelete","destroy","deletedItem","item_type","or"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,EAAE,GAAGC,sBAAUD,EAArB;;IAEME,W;;;;;;;;;;;;;;;uBAGaC,mBAASC,IAAT,CAAcC,OAAd,E;;;;;;;;AAEbC,gBAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;;;;;;;;;;;;;;;;;;;;qHAKiBC,O;;;;;;;uBAEJL,mBAASC,IAAT,CAAcK,MAAd,CAAqBD,OAArB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;yHAMOE,E,EAAIC,W;;;;;;;;uBAEGR,mBAASC,IAAT,CAAcQ,OAAd,CAAsB;AAC/CC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AADwC,iBAAtB,C;;;AAArBK,gBAAAA,Y;;qBAIFA,Y;;;;;;uBACIZ,mBAASC,IAAT,CAAcY,MAAd,CAAqBL,WAArB,EAAiC;AAAEE,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAAT,iBAAjC,C;;;kDAECC,W;;;kDAEF,I;;;;;;;;;;;;;;;;;;;;;;;;sHAMWD,E;;;;;;;;uBAEIP,mBAASC,IAAT,CAAcQ,OAAd,CAAsB;AAC1CC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AADmC,iBAAtB,C;;;AAAhBO,gBAAAA,O;kDAICA,O;;;;;;;;;;;;;;;;;;;;;;;;wHAMaP,E;;;;;;;;uBAEOP,mBAASC,IAAT,CAAcQ,OAAd,CAAsB;AAAEC,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AAAT,iBAAtB,C;;;AAArBQ,gBAAAA,Y;;qBAEFA,Y;;;;;;uBACwBf,mBAASC,IAAT,CAAce,OAAd,CAAsB;AAC9CN,kBAAAA,KAAK,EAAE;AAAEH,oBAAAA,EAAE,EAAEI,MAAM,CAACJ,EAAD;AAAZ;AADuC,iBAAtB,C;;;AAApBU,gBAAAA,W;kDAGCA,W;;;kDAEF,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAQMjB,mBAASC,IAAT,CAAcC,OAAd,CAAsB;AAAEQ,kBAAAA,KAAK,EAAE;AAC1CQ,oBAAAA,SAAS,uCACNrB,EAAE,CAACsB,EADG,EACE,CAAC,QAAD,EAAW,UAAX,EAAuB,MAAvB,EAA+B,SAA/B,EAA0C,QAA1C,EAAoD,UAApD,EAAgE,UAAhE,CADF;AADiC;AAAT,iBAAtB,C;;;;;;;;AAMbhB,gBAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAOaJ,mBAASC,IAAT,CAAcC,OAAd,CAAsB;AAAEQ,kBAAAA,KAAK,EAAE;AAC1CQ,oBAAAA,SAAS,uCACNrB,EAAE,CAACsB,EADG,EACE,CAAC,MAAD,EAAS,OAAT,EAAkB,UAAlB,EAA8B,SAA9B,EAAyC,KAAzC,EAAgD,OAAhD,EAAyD,OAAzD,EAAkE,QAAlE,EAA4E,OAA5E,EAAqF,MAArF,CADF;AADiC;AAAT,iBAAtB,C;;;;;;;;AAMbhB,gBAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;;;;;;;;;;;;;;;;;;;;;eAOSL,W","sourcesContent":["import database from '../src/models';\nimport Sequelize from 'sequelize';\n\nconst Op = Sequelize.Op;\n\nclass ItemService {\n  static async getAllItems() {\n    try {\n      return await database.item.findAll();\n    } catch (error) {\n      console.log(\"Erreur dans le service\" + error);\n      throw error;\n    }\n  }\n\n  static async addItem(newItem) {\n    try {\n      return await database.item.create(newItem);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async updateItem(id, updateItem) {\n    try {\n      const ItemToUpdate = await database.item.findOne({\n        where: { id: Number(id) }\n      });\n\n      if (ItemToUpdate) {\n        await database.item.update(updateItem, { where: { id: Number(id) } });\n\n        return updateItem;\n      }\n      return null;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async getAItem(id) {\n    try {\n      const theItem = await database.item.findOne({\n        where: { id: Number(id) }\n      });\n\n      return theItem;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async deleteItem(id) {\n    try {\n      const ItemToDelete = await database.item.findOne({ where: { id: Number(id) } });\n\n      if (ItemToDelete) {\n        const deletedItem = await database.item.destroy({\n          where: { id: Number(id) }\n        });\n        return deletedItem;\n      }\n      return null;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static async getAllNonWeapons(){\n    try {\n      return await database.item.findAll({ where: {\n        item_type :{\n          [Op.or]: [\"Bottes\", \"Ceinture\", \"Cape\", \"Chapeau\", \"Anneau\", \"Amulette\", \"Bouclier\"]\n        }\n      }});\n    } catch (error) {\n      console.log(\"Erreur dans le service\" + error);\n      throw error;\n    }\n    \n  }\n  static async getAllWeapons(){\n    try {\n      return await database.item.findAll({ where: {\n        item_type :{\n          [Op.or]: [\"Épée\", \"Dague\", \"Baguette\", \"Marteau\", \"Arc\", \"Pelle\", \"Hache\", \"Pioche\", \"Bâton\", \"Faux\"]\n        }\n      }});\n    } catch (error) {\n      console.log(\"Erreur dans le service\" + error);\n      throw error;\n    }\n    \n  }\n}\n\nexport default ItemService;"],"file":"ItemService.js"}
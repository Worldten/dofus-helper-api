{"version":3,"sources":["../../api/test/test-player.js"],"names":["chai","use","chatHttp","expect","describe","it","done","player","id","player_mail","player_pwd","player_username","player_jobs","player_characters","request","app","post","set","send","end","err","res","status","to","equal","body","data","include","get","should","have","property","playerId","eql","updatedplayer","put"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AAEAA,iBAAKC,GAAL,CAASC,oBAAT;;IACQC,M,GAAWH,gB,CAAXG,M;AAERC,QAAQ,CAAC,+BAAD,EAAkC,YAAM;AAC9CC,EAAAA,EAAE,CAAC,2BAAD,EAA8B,UAACC,IAAD,EAAU;AACxC,QAAMC,MAAM,GAAG;AACbC,MAAAA,EAAE,EAAE,CADS;AAEbC,MAAAA,WAAW,EAAE,mBAFA;AAGbC,MAAAA,UAAU,EAAE,QAHC;AAIbC,MAAAA,eAAe,EAAE,UAJJ;AAKbC,MAAAA,WAAW,EAAE;AACX,oBAAa,GADF;AAEX,sBAAc;AAFH,OALA;AASbC,MAAAA,iBAAiB,EAAE;AACjB,iBAAQ;AACN,kBAAQ,UADF;AAEN,mBAAS,KAFH;AAGN,mBAAS;AAHH,SADS;AAMjB,iBAAQ;AACN,kBAAQ,YADF;AAEN,mBAAS,OAFH;AAGN,mBAAS;AAHH;AANS;AATN,KAAf;;AAsBAb,qBAAKc,OAAL,CAAaC,iBAAb,EACGC,IADH,CACQ,iBADR,EAEGC,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGC,IAHH,CAGQX,MAHR,EAIGY,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBlB,MAAAA,MAAM,CAACkB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACArB,MAAAA,MAAM,CAACkB,GAAG,CAACI,IAAJ,CAASC,IAAV,CAAN,CAAsBH,EAAtB,CAAyBI,OAAzB,CAAiC;AAC/BnB,QAAAA,EAAE,EAAE,CAD2B;AAE/BC,QAAAA,WAAW,EAAEF,MAAM,CAACE,WAFW;AAG/BC,QAAAA,UAAU,EAAEH,MAAM,CAACG,UAHY;AAI/BC,QAAAA,eAAe,EAAEJ,MAAM,CAACI;AAJO,OAAjC;AAMAL,MAAAA,IAAI;AACL,KAbH;AAcD,GArCC,CAAF;AAuCAD,EAAAA,EAAE,CAAC,0DAAD,EAA6D,UAACC,IAAD,EAAU;AACvE,QAAMC,MAAM,GAAG;AACbG,MAAAA,UAAU,EAAE,QADC;AAEbC,MAAAA,eAAe,EAAE,UAFJ;AAGbC,MAAAA,WAAW,EAAE,EAHA;AAIbC,MAAAA,iBAAiB,EAAE;AAJN,KAAf;;AAMAb,qBAAKc,OAAL,CAAaC,iBAAb,EACGC,IADH,CACQ,iBADR,EAEGC,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGC,IAHH,CAGQX,MAHR,EAIGY,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBlB,MAAAA,MAAM,CAACkB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAlB,MAAAA,IAAI;AACL,KAPH;AAQD,GAfC,CAAF;AAiBAD,EAAAA,EAAE,CAAC,2BAAD,EAA8B,UAACC,IAAD,EAAU;AACxCN,qBAAKc,OAAL,CAAaC,iBAAb,EACGa,GADH,CACO,iBADP,EAEGX,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGE,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBlB,MAAAA,MAAM,CAACkB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBG,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,IAAtC;AACAV,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBG,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,aAAtC;AACAV,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBG,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,YAAtC;AACAV,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBG,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,iBAAtC;AACAV,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBG,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,sBAAtC;AACAV,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBG,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,aAAtC;AACAV,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAc,CAAd,EAAiBG,MAAjB,CAAwBC,IAAxB,CAA6BC,QAA7B,CAAsC,mBAAtC;AACAzB,MAAAA,IAAI;AACL,KAbH;AAcD,GAfC,CAAF;AAiBAD,EAAAA,EAAE,CAAC,mCAAD,EAAsC,UAACC,IAAD,EAAU;AAChD,QAAM0B,QAAQ,GAAG,CAAjB;;AACAhC,qBAAKc,OAAL,CAAaC,iBAAb,EACGa,GADH,2BAC0BI,QAD1B,GAEGf,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGE,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBlB,MAAAA,MAAM,CAACkB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcG,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,IAAnC;AACAV,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcG,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,aAAnC;AACAV,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcG,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,YAAnC;AACAV,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcG,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,iBAAnC;AACAV,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcG,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,sBAAnC;AACAV,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcG,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,aAAnC;AACAV,MAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcG,MAAd,CAAqBC,IAArB,CAA0BC,QAA1B,CAAmC,mBAAnC;AACAzB,MAAAA,IAAI;AACL,KAbH;AAcD,GAhBC,CAAF;AAkBAD,EAAAA,EAAE,CAAC,uDAAD,EAA0D,UAACC,IAAD,EAAU;AACpE,QAAM0B,QAAQ,GAAG,CAAC,CAAlB;;AACAhC,qBAAKc,OAAL,CAAaC,iBAAb,EACGa,GADH,2BAC0BI,QAD1B,GAEGf,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGE,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBlB,MAAAA,MAAM,CAACkB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACqBE,GADrB,0CAC2DD,QAD3D;AAEA1B,MAAAA,IAAI;AACL,KARH;AASD,GAXC,CAAF;AAaAD,EAAAA,EAAE,CAAC,2DAAD,EAA8D,UAACC,IAAD,EAAU;AACxE,QAAM0B,QAAQ,GAAG,KAAjB;;AACAhC,qBAAKc,OAAL,CAAaC,iBAAb,EACGa,GADH,2BAC0BI,QAD1B,GAEGf,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGE,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBlB,MAAAA,MAAM,CAACkB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACqBE,GADrB,CACyB,oCADzB;AAEA3B,MAAAA,IAAI;AACL,KARH;AASD,GAXC,CAAF;AAaAD,EAAAA,EAAE,CAAC,2BAAD,EAA8B,UAACC,IAAD,EAAU;AACxC,QAAM0B,QAAQ,GAAG,CAAjB;AACA,QAAME,aAAa,GAAG;AACpB1B,MAAAA,EAAE,EAAEwB,QADgB;AAEpBvB,MAAAA,WAAW,EAAE,mBAFO;AAGpBC,MAAAA,UAAU,EAAE,QAHQ;AAIpBC,MAAAA,eAAe,EAAE,UAJG;AAKpBC,MAAAA,WAAW,EAAE,EALO;AAMpBC,MAAAA,iBAAiB,EAAE;AANC,KAAtB;;AAQAb,qBAAKc,OAAL,CAAaC,iBAAb,EACGoB,GADH,2BAC0BH,QAD1B,GAEGf,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGC,IAHH,CAGQgB,aAHR,EAIGf,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBlB,MAAAA,MAAM,CAACkB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACArB,MAAAA,MAAM,CAACkB,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAclB,EAAf,CAAN,CAAyBgB,KAAzB,CAA+BU,aAAa,CAAC1B,EAA7C;AACAL,MAAAA,MAAM,CAACkB,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcjB,WAAf,CAAN,CAAkCe,KAAlC,CAAwCU,aAAa,CAACzB,WAAtD;AACAN,MAAAA,MAAM,CAACkB,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAchB,UAAf,CAAN,CAAiCc,KAAjC,CAAuCU,aAAa,CAACxB,UAArD;AACAP,MAAAA,MAAM,CAACkB,GAAG,CAACI,IAAJ,CAASC,IAAT,CAAcf,eAAf,CAAN,CAAsCa,KAAtC,CAA4CU,aAAa,CAACvB,eAA1D;AACAL,MAAAA,IAAI;AACL,KAXH;AAYD,GAtBC,CAAF;AAwBAD,EAAAA,EAAE,CAAC,+CAAD,EAAkD,UAACC,IAAD,EAAU;AAC5D,QAAM0B,QAAQ,GAAG,IAAjB;AACA,QAAME,aAAa,GAAG;AACpB1B,MAAAA,EAAE,EAAEwB,QADgB;AAEpBtB,MAAAA,UAAU,EAAE,QAFQ;AAGpBC,MAAAA,eAAe,EAAE;AAHG,KAAtB;;AAKAX,qBAAKc,OAAL,CAAaC,iBAAb,EACGoB,GADH,2BAC0BH,QAD1B,GAEGf,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGC,IAHH,CAGQgB,aAHR,EAIGf,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBlB,MAAAA,MAAM,CAACkB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACqBE,GADrB,2CAC4DD,QAD5D;AAEA1B,MAAAA,IAAI;AACL,KATH;AAUD,GAjBC,CAAF;AAmBAD,EAAAA,EAAE,CAAC,yDAAD,EAA4D,UAACC,IAAD,EAAU;AACtE,QAAM0B,QAAQ,GAAG,KAAjB;AACA,QAAME,aAAa,GAAG;AACpB1B,MAAAA,EAAE,EAAEwB,QADgB;AAEpBtB,MAAAA,UAAU,EAAE,QAFQ;AAGpBC,MAAAA,eAAe,EAAE,UAHG;AAIpBC,MAAAA,WAAW,EAAE,EAJO;AAKpBC,MAAAA,iBAAiB,EAAE;AALC,KAAtB;;AAOAb,qBAAKc,OAAL,CAAaC,iBAAb,EACGoB,GADH,2BAC0BH,QAD1B,GAEGf,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGC,IAHH,CAGQgB,aAHR,EAIGf,GAJH,CAIO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBlB,MAAAA,MAAM,CAACkB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACqBE,GADrB,CACyB,oCADzB;AAEA3B,MAAAA,IAAI;AACL,KATH;AAUD,GAnBC,CAAF;AAsBAD,EAAAA,EAAE,CAAC,2BAAD,EAA8B,UAACC,IAAD,EAAU;AACxC,QAAM0B,QAAQ,GAAG,CAAjB;;AACAhC,qBAAKc,OAAL,CAAaC,iBAAb,sCAC6BiB,QAD7B,GAEGf,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGE,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBlB,MAAAA,MAAM,CAACkB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACArB,MAAAA,MAAM,CAACkB,GAAG,CAACI,IAAJ,CAASC,IAAV,CAAN,CAAsBH,EAAtB,CAAyBI,OAAzB,CAAiC,EAAjC;AACArB,MAAAA,IAAI;AACL,KAPH;AAQD,GAVC,CAAF;AAYAD,EAAAA,EAAE,CAAC,+CAAD,EAAkD,UAACC,IAAD,EAAU;AAC5D,QAAM0B,QAAQ,GAAG,CAAC,CAAlB;;AACAhC,qBAAKc,OAAL,CAAaC,iBAAb,sCAC6BiB,QAD7B,GAEGf,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGE,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBlB,MAAAA,MAAM,CAACkB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EACqBE,GADrB,8BAC+CD,QAD/C;AAEA1B,MAAAA,IAAI;AACL,KARH;AASD,GAXC,CAAF;AAaAD,EAAAA,EAAE,CAAC,mDAAD,EAAsD,UAACC,IAAD,EAAU;AAChE,QAAM0B,QAAQ,GAAG,KAAjB;;AACAhC,qBAAKc,OAAL,CAAaC,iBAAb,sCAC6BiB,QAD7B,GAEGf,GAFH,CAEO,QAFP,EAEiB,kBAFjB,EAGGE,GAHH,CAGO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjBlB,MAAAA,MAAM,CAACkB,GAAG,CAACC,MAAL,CAAN,CAAmBC,EAAnB,CAAsBC,KAAtB,CAA4B,GAA5B;AACAH,MAAAA,GAAG,CAACI,IAAJ,CAASI,MAAT,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,SAA9B,EAAyCE,GAAzC,CAA6C,gCAA7C;AACA3B,MAAAA,IAAI;AACL,KAPH;AAQD,GAVC,CAAF;AAWD,CA3NO,CAAR","sourcesContent":["import chai from 'chai';\nimport chatHttp from 'chai-http';\nimport 'chai/register-should';\nimport app from '../index';\n\nchai.use(chatHttp);\nconst { expect } = chai;\n\ndescribe('Testing the player endpoints:', () => {\n  it('It should create a player', (done) => {\n    const player = {\n      id: 1,\n      player_mail: \"thomaszim@free.fr\",\n      player_pwd: \"thomas\",\n      player_username: \"Worldten\",\n      player_jobs: {\n        \"Bucheron\" : 100,\n        \"Alchimiste\": 66\n      },\n      player_characters: {\n        \"Char1\":{\n          \"name\": \"Worldten\",\n          \"class\": \"Iop\",\n          \"level\": 78\n        },\n        \"Char2\":{\n          \"name\": \"WorldEight\",\n          \"class\": \"Zobal\",\n          \"level\": 73\n        }\n      }\n    };\n    chai.request(app)\n      .post('/api/v1/players')\n      .set('Accept', 'application/json')\n      .send(player)\n      .end((err, res) => {\n        expect(res.status).to.equal(201);\n        expect(res.body.data).to.include({\n          id: 1,\n          player_mail: player.player_mail,\n          player_pwd: player.player_pwd,\n          player_username: player.player_username\n        });\n        done();\n      });\n  });\n\n  it('It should not create a player with incomplete parameters', (done) => {\n    const player = {\n      player_pwd: \"thomas\",\n      player_username: \"Worldten\",\n      player_jobs: { },\n      player_characters: { }\n    };\n    chai.request(app)\n      .post('/api/v1/players')\n      .set('Accept', 'application/json')\n      .send(player)\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        done();\n      });\n  });\n\n  it('It should get all players', (done) => {\n    chai.request(app)\n      .get('/api/v1/players')\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        res.body.data[0].should.have.property('id');\n        res.body.data[0].should.have.property('player_mail');\n        res.body.data[0].should.have.property('player_pwd');\n        res.body.data[0].should.have.property('player_username');\n        res.body.data[0].should.have.property('player_confirmedmail');\n        res.body.data[0].should.have.property('player_jobs');\n        res.body.data[0].should.have.property('player_characters');\n        done();\n      });\n  });\n\n  it('It should get a particular player', (done) => {\n    const playerId = 1;\n    chai.request(app)\n      .get(`/api/v1/players/${playerId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        res.body.data.should.have.property('id');\n        res.body.data.should.have.property('player_mail');\n        res.body.data.should.have.property('player_pwd');\n        res.body.data.should.have.property('player_username');\n        res.body.data.should.have.property('player_confirmedmail');\n        res.body.data.should.have.property('player_jobs');\n        res.body.data.should.have.property('player_characters');\n        done();\n      });\n  });\n\n  it('It should not get a particular player with invalid id', (done) => {\n    const playerId = -2;\n    chai.request(app)\n      .get(`/api/v1/players/${playerId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(404);\n        res.body.should.have.property('message')\n                            .eql(`Cannot find Player with the id ${playerId}`);\n        done();\n      });\n  });\n\n  it('It should not get a particular player with non-numeric id', (done) => {\n    const playerId = 'aaa';\n    chai.request(app)\n      .get(`/api/v1/players/${playerId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message')\n                            .eql('Please input a valid numeric value');\n        done();\n      });\n  });\n\n  it('It should update a player', (done) => {\n    const playerId = 1;\n    const updatedplayer = {\n      id: playerId,\n      player_mail: \"thomaszim@free.fr\",\n      player_pwd: \"thomas\",\n      player_username: \"Worldten\",\n      player_jobs: { },\n      player_characters: { }\n    };\n    chai.request(app)\n      .put(`/api/v1/players/${playerId}`)\n      .set('Accept', 'application/json')\n      .send(updatedplayer)\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        expect(res.body.data.id).equal(updatedplayer.id);\n        expect(res.body.data.player_mail).equal(updatedplayer.player_mail);\n        expect(res.body.data.player_pwd).equal(updatedplayer.player_pwd);\n        expect(res.body.data.player_username).equal(updatedplayer.player_username);\n        done();\n      });\n  });\n\n  it('It should not update a player with invalid id', (done) => {\n    const playerId = '-2';\n    const updatedplayer = {\n      id: playerId,\n      player_pwd: \"thomas\",\n      player_username: \"Worldten\",\n    };\n    chai.request(app)\n      .put(`/api/v1/players/${playerId}`)\n      .set('Accept', 'application/json')\n      .send(updatedplayer)\n      .end((err, res) => {\n        expect(res.status).to.equal(404);\n        res.body.should.have.property('message')\n                            .eql(`Cannot find Player with the id: ${playerId}`);\n        done();\n      });\n  });\n\n  it('It should not update a player with non-numeric id value', (done) => {\n    const playerId = 'ggg';\n    const updatedplayer = {\n      id: playerId,\n      player_pwd: \"thomas\",\n      player_username: \"Worldten\",\n      player_jobs: { },\n      player_characters: { }\n    };\n    chai.request(app)\n      .put(`/api/v1/players/${playerId}`)\n      .set('Accept', 'application/json')\n      .send(updatedplayer)\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message')\n                            .eql('Please input a valid numeric value');\n        done();\n      });\n  });\n\n\n  it('It should delete a player', (done) => {\n    const playerId = 1;\n    chai.request(app)\n      .delete(`/api/v1/players/${playerId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(200);\n        expect(res.body.data).to.include({});\n        done();\n      });\n  });\n\n  it('It should not delete a player with invalid id', (done) => {\n    const playerId = -2;\n    chai.request(app)\n      .delete(`/api/v1/players/${playerId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(404);\n        res.body.should.have.property('message')\n                            .eql(`Player with the id ${playerId} cannot be found`);\n        done();\n      });\n  });\n\n  it('It should not delete a player with non-numeric id', (done) => {\n    const playerId = 'bbb';\n    chai.request(app)\n      .delete(`/api/v1/players/${playerId}`)\n      .set('Accept', 'application/json')\n      .end((err, res) => {\n        expect(res.status).to.equal(400);\n        res.body.should.have.property('message').eql('Please provide a numeric value');\n        done();\n      });\n  });\n});"],"file":"test-player.js"}